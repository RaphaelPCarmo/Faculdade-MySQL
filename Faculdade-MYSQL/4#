--Nome: Atividade 4
CREATE DATABASE Exercicio21;
 USE Exercicio21;
 
DROP DATABASE IF EXISTS Exercicio21;
CREATE DATABASE Exercicio21;
USE Exercicio21;
-- Criação das tabelas
CREATE TABLE responsavel (
    id INT PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL
);

CREATE TABLE cachorro (
    id INT PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    raca VARCHAR(50),
    temperamento VARCHAR(20),
    id_responsavel INT,
    FOREIGN KEY (id_responsavel) REFERENCES responsavel(id)
);

CREATE TABLE agenda (
    id INT PRIMARY KEY, 
    data DATE NOT NULL,  -- Alterado de "Datas" para "data"
    horario TIME NOT NULL,
    id_cachorro INT,
    valor_consulta DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (id_cachorro) REFERENCES cachorro(id)
);

-- Inserção de responsáveis
INSERT INTO responsavel VALUES
(1, 'Carla', 'carla@email.com'),
(2, 'Lucas', 'lucas@email.com'),
(3, 'Fernanda', 'fernanda@email.com');

-- Inserção de cachorros
INSERT INTO cachorro VALUES
(1, 'Rex', 'Labrador', 'dócil', 1),
(2, 'Thor', 'Pitbull', 'agressivo', 1),
(3, 'Luna', 'Poodle', 'nervoso', 2),
(4, 'Bobby', 'Beagle', 'dócil', 3),
(5, 'Mel', 'Bulldog', 'agitado', 3);

-- Inserção de agendamentos
INSERT INTO agenda VALUES
(1, '2025-03-12', '10:00:00', 1, 120.50),
(2, '2025-03-12', '11:00:00', 2, 150.00),
(3, '2025-03-13', '09:00:00', 3, 130.75),
(4, '2025-03-12', '14:00:00', 4, 110.90),
(5, '2025-03-14', '15:00:00', 5, 140.20),
(6, '2025-03-15', '08:30:00', 1, 120.50),
(7, '2025-03-12', '16:00:00', 3, 130.75),
(8, '2025-03-13', '17:00:00', 2, 150.00),
(9, '2025-03-12', '13:00:00', 5, 140.20),
(10, '2025-03-12', '09:00:00', 4, 110.90);

-- Consultas corrigidas
-- 1. Contar o número de cachorros por responsável
SELECT responsavel.nome, COUNT(cachorro.id) AS quantidade_cachorros
FROM responsavel 
LEFT JOIN cachorro ON responsavel.id = cachorro.id_responsavel
GROUP BY responsavel.nome
ORDER BY responsavel.nome DESC;

-- 2. Buscar o nome do responsável, nome do cachorro e a quantidade de atendimentos
SELECT responsavel.nome, cachorro.nome, COUNT(agenda.id) AS atendimentos
FROM responsavel 
INNER JOIN cachorro ON responsavel.id = cachorro.id_responsavel
INNER JOIN agenda ON cachorro.id = agenda.id_cachorro
GROUP BY responsavel.nome, cachorro.nome
ORDER BY cachorro.nome ASC;

-- 3. Somar os valores pagos por cada cachorro
SELECT cachorro.nome, SUM(agenda.valor_consulta) AS total_pago
FROM cachorro
INNER JOIN agenda ON cachorro.id = agenda.id_cachorro
GROUP BY cachorro.nome;

-- 4. Responsável com maior valor de consulta pago
SELECT responsavel.nome, MAX(agenda.valor_consulta) AS maior_valor_pago
FROM responsavel
INNER JOIN cachorro ON responsavel.id = cachorro.id_responsavel
INNER JOIN agenda ON cachorro.id = agenda.id_cachorro
GROUP BY responsavel.nome
ORDER BY maior_valor_pago DESC;
